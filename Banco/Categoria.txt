create table tb_categoria(
id integer not null primary key,
nome varchar(50) not null
);



CREATE SEQUENCE public.sq_categoria
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9999999
  START 1
  CACHE 1
  CYCLE;
ALTER TABLE public.sq_categoria
  OWNER TO postgres;
COMMENT ON SEQUENCE public.sq_categoria
  IS 'Sequence utilizada na tabelas de Categoria';


CREATE OR REPLACE FUNCTION public.trg_fc_categoria()
  RETURNS trigger AS
$BODY$ 

begin
	if (TG_OP = 'INSERT') and  (coalesce(NEW.id,0) = 0) then 
		select nextval('sq_categoria')
		  into NEW.id;
	end if;
	return NEW;
end; 
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION public.trg_fc_categoria()
  OWNER TO postgres;
COMMENT ON FUNCTION public.trg_fc_categoria() IS 'Criar o id no momento do insert,  caso não tenha sido informado.';


CREATE TRIGGER trg_categoria
  BEFORE INSERT
  ON public.tb_categoria
  FOR EACH ROW
  EXECUTE PROCEDURE public.trg_fc_categoria();
COMMENT ON TRIGGER trg_categoria ON public.tb_categoria IS 'Gerar o id quando for nulo';



